guid,question,answer,paper_title,paper_url,explanation,tags
xxq%EPv[kq,Give the <b>forward diffusion process</b>.,"Given a data point sampled from a real data distribution \(\mathbf{x}_0 \sim q(\mathbf{x})\), let us <b>define a forward diffusion process in which we add small amounts of Gaussian noise to the sample</b> in \(T\) steps, producing a sequence of noisy samples \(\mathbf{x}_1, \dots, \mathbf{x}_T\).&nbsp;The step sizes are controlled by a variance schedule \(\{\beta_t \in (0, 1)\}_{t=1}^T\)<br>\[q(\mathbf{x}_t \vert \mathbf{x}_{t-1}) = \mathcal{N}(\mathbf{x}_t; \sqrt{1 - \beta_t} \mathbf{x}_{t-1}, \beta_t\mathbf{I}) \]\[q(\mathbf{x}_{1:T} \vert \mathbf{x}_0) = \prod^T_{t=1} q(\mathbf{x}_t \vert \mathbf{x}_{t-1})\]As \(T \to \infty\), \(\mathbf{x}_T\) becomes equivalent to an isotropic Gaussian&nbsp; distribution.<br><img src=""forward-diffusion.png""><br><em>Forward diffusion process. Image modified by <a href=""https://arxiv.org/abs/2006.11239"">Ho et al. 2020</a></em><br>",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
v6k1^b/WS8,"<b>Why is the mean of the forward diffusion model scaled by \(\sqrt{1 - \beta_t}\)</b>, where \(\beta_t\) is the variance to \(\mathbf{x}_t\)?<br>\[q(\mathbf{x}_t|\mathbf{x}_{t-1}) = N(\mathbf{x}_t;\sqrt{1-\beta_t}\mathbf{x}_{t-1},\beta_t\mathbf{I})\]","<b>The scaling factor is needed to avoid making the variance of </b>\(\mathbf{x}_t\)<b> grow in each step.</b><br>If we would not scale it, after \(T\) steps we will have a value \(\mathbf{x}_t \in [-T,T]\).<br>To force \(\mathrm{Var}(x_1) = 1\) we need to scale by \(\sqrt{1 - \beta_t}\).",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
nI>B98FD3],"In the<b> forward diffusion process, how can we go from </b>\(\mathbf{x}_0\)<b>&nbsp;to&nbsp;&nbsp;</b>\(\mathbf{x}_T\)<b> in a single step</b>?<br>Recall that \(q(\mathbf{x}_t \vert \mathbf{x}_{t-1}) = \mathcal{N}(\mathbf{x}_t; \sqrt{1 - \beta_t} \mathbf{x}_{t-1}, \beta_t\mathbf{I}) \quad
q(\mathbf{x}_{1:T} \vert \mathbf{x}_0) = \prod^T_{t=1} q(\mathbf{x}_t \vert \mathbf{x}_{t-1})\)","Using the reparameterization trick that tells us:<br>\[\begin{aligned}
\mathbf{z} &amp;\sim \mathcal{N}(\mathbf{z}; \boldsymbol{\mu}, \boldsymbol{\sigma}\boldsymbol{I}) &amp; \\
\mathbf{z} &amp;= \boldsymbol{\mu} + \boldsymbol{\sigma} \odot \boldsymbol{\epsilon} \text{, where } \boldsymbol{\epsilon} \sim \mathcal{N}(0, \boldsymbol{I}) &amp; \scriptstyle{\text{; Reparameterization trick.}}
\end{aligned}\]If we define \(\alpha_t = 1 - \beta_t\) and \(\bar{\alpha}_t = \prod_{i=1}^t \alpha_i\):<br>\[\begin{aligned}
\mathbf{x}_t 
&amp;= \sqrt{\alpha_t}\mathbf{x}_{t-1} + \sqrt{1 - \alpha_t}\boldsymbol{\epsilon}_{t-1} &amp; \text{ ;where } \boldsymbol{\epsilon}_{t-1}, \boldsymbol{\epsilon}_{t-2}, \dots \sim \mathcal{N}(\mathbf{0}, \mathbf{I}) \\
&amp;= \sqrt{\alpha_t \alpha_{t-1}} \mathbf{x}_{t-2} + \sqrt{1 - \alpha_t \alpha_{t-1}} \bar{\boldsymbol{\epsilon}}_{t-2} &amp; \text{ ;where } \bar{\boldsymbol{\epsilon}}_{t-2} \text{ merges two Gaussians (*).} \\
&amp;= \dots \\
&amp;= \sqrt{\bar{\alpha}_t}\mathbf{x}_0 + \sqrt{1 - \bar{\alpha}_t}\boldsymbol{\epsilon} \\
q(\mathbf{x}_t \vert \mathbf{x}_0) &amp;= \mathcal{N}(\mathbf{x}_t; \sqrt{\bar{\alpha}_t} \mathbf{x}_0, (1 - \bar{\alpha}_t)\mathbf{I})
\end{aligned}\](*) Recall that when we merge two Gaussians with different variance, \(\mathcal{N}(\mathbf{0}, \sigma_1^2\mathbf{I})\)&nbsp;and \(\mathcal{N}(\mathbf{0}, \sigma_2^2\mathbf{I})\), the new distribution is \(\mathcal{N}(\mathbf{0}, (\sigma_1^2 + \sigma_2^2)\mathbf{I})\). Here the merged standard deviation is \(\sqrt{(1 - \alpha_t) + \alpha_t (1-\alpha_{t-1})} = \sqrt{1 - \alpha_t\alpha_{t-1}}\).<br>",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
"DK)A;8~,+R",Draw the diffusion process.,"<img src=""DDPM.png""><br>",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,"source:&nbsp;<a href=""https://lilianweng.github.io/posts/2021-07-11-diffusion-models/"">https://lilianweng.github.io/posts/2021-07-11-diffusion-models/</a>",
J_C[@Wze1^,Give the <b>simplified objective funtion</b> (<b>loss</b>) for <b>diffusion</b> models.,"\[L_\text{simple} = L_t^\text{simple} + C\]<br>where \(C\) is a constant not depending on \(\theta\) and&nbsp;<br>\[\begin{aligned}
L_t^\text{simple}
&amp;= \mathbb{E}_{t \sim [1, T], \mathbf{x}_0, \boldsymbol{\epsilon}_t} \Big[\|\boldsymbol{\epsilon}_t - \boldsymbol{\epsilon}_\theta(\mathbf{x}_t, t)\|^2 \Big] \\
&amp;= \mathbb{E}_{t \sim [1, T], \mathbf{x}_0, \boldsymbol{\epsilon}_t} \Big[\|\boldsymbol{\epsilon}_t - \boldsymbol{\epsilon}_\theta(\sqrt{\bar{\alpha}_t}\mathbf{x}_0 + \sqrt{1 - \bar{\alpha}_t}\boldsymbol{\epsilon}_t, t)\|^2 \Big]
\end{aligned}\]",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
B`zj&F[CED,Give the <b>training algorithm</b> for Denoising <b>Diffusion</b> Probabilistic Models.,"<div style=""text-align: left;"">repeat until convergence:<br>&nbsp; &nbsp;&nbsp;\(\mathbf{x}_0 \sim q(\mathbf{x}_0)\)<br>&nbsp; &nbsp; \(t \sim \operatorname{Uniform}(\{1, \dots,T\})\)<br>&nbsp; &nbsp; \(\boldsymbol{\epsilon} \sim \mathcal{N}(0, \mathbf{I})\)<br>&nbsp; &nbsp; Take gradient descent step on \(\nabla_\theta \|\boldsymbol{\epsilon} - \boldsymbol{\epsilon}_\theta(\sqrt{\bar{\alpha}_t}\mathbf{x}_0 + \sqrt{1 - \bar{\alpha}_t}\boldsymbol{\epsilon},t)\|^2\)<br></div>",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
"BB3V,(|H%4",Give the&nbsp;<b>inference algorithm</b>&nbsp;for Denoising&nbsp;<b>Diffusion</b>&nbsp;Probabilistic Models.,"<div style=""text-align: left;"">\(\mathbf{x}_t \sim \mathcal{N}(\mathbf{0}, \mathbf{I})\)<br>for \(t = T, \dots, 1\) do:<br>&nbsp; &nbsp; \(\mathbf{z} \sim \mathcal{N}(\mathbf{0}, \mathbf{I})\) if \(t &gt; 1\), else \(\mathbf{z} = \mathbf{0}\)<br>&nbsp; &nbsp; \(\mathbf{x}_{t-1} = \frac{1}{\sqrt{\alpha_t}}(\mathbf{x}_t - \frac{q - \alpha_t}{\sqrt{1 - \bar{\alpha}_t}}\boldsymbol{\epsilon}_\theta(\mathbf{x}_t, t)) + \sigma_t \mathbf{z}\)<br>return \(\mathbf{x}_0\)</div>",Denoising Diffusion Probabilistic Models,https://arxiv.org/abs/2006.11239,,
